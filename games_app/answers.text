### Questions

1. What is responsible for defining the routes of the `games` resource?

ANSWER: Within the creat_router.js file

2. What do you notice about the folder structure?  Whats the client responsible for? Whats the server responsible for?

ANSWER: The server is responsible for collecting and speaking to the data.
The client is responsible for the front-end and within it can manipulate the data/app.

3. What are the the responsibilities of server.js?

ANSWER: To connect the database to the local server and make requests and take responses from the database.

4. What are the responsibilities of the `gamesRouter`?

ANSWER: It saves the changes made onto the data using the Mongo methods and CRUD methods

5. What process does the the client (front-end) use to communicate with the server?

ANSWER: Fetch? 


6. What optional second argument does the `fetch` method take? And what is it used for in this application? Hint: See [Using Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) on the MDN docs

ANSWER:

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?

ANSWER: GET requests

8. What are we using the [MongoDB Driver](http://mongodb.github.io/node-mongodb-native/) for?

ANSWER: To use and interact with the Database of games.

## Extension

Why do we need to use [`ObjectId`](https://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html) from the MongoDB driver?

ANSWER: To be able to select an individual object from the database.

Add to your diagram the dataflow for removing a game.
